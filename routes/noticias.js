const express = require('express')
const Noticia = require('../models/noticia')
const { verificarToken, verificarRolAdmin } = require('../functions/auth')

const router = express.Router()

//Petición GET para obtener una lista con todas las noticias
router.get('/', (req, res) => {
    Noticia.find({ publicada: true })
        .sort({ fechaNoticia: -1 })
        .populate([{ path: 'usuario', select: 'nombre -_id' }])
        .exec((err, noticiasDB) => {
            if (err) { res.status(500).json(err) }
            res.json({ noticias: noticiasDB })
        })
})

//Petición POST para la creación de una noticia
//TOKEN
router.post('/', verificarToken, (req, res) => {
    let body = req.body

    //Variable que va a obtener los datos del body de la noticia
    let noticia = new Noticia({
        titulo: body.titulo,
        descripcion: body.descripcion,
        url: body.url,
        usuario: body.usuario
    })

    //Almacena la nueva noticia en la base de datos
    noticia.save((err, noticiaDB) => {
        if (err) { return res.status(500).json(err) }
        res.json({ noticia: noticiaDB })
    })
})

//Petición PUT para validar una noticia
//TOKEN, ADMIN
router.put('/:id', [verificarToken, verificarRolAdmin], (req, res) => {
    let id = req.params.id
    let publicarNoticia = { publicada: true }
    let mensaje = 'noticia no encontrada'

    Noticia.findByIdAndUpdate(id, publicarNoticia, { new: true }, (err, noticiaDB) => {
        if (err) { return res.status(500).json(err) }
        if (!noticiaDB) { return res.status(404).json({ message: mensaje }) }
        res.json({ noticia: noticiaDB })
    })
})

//Petición DELETE para borrar una noticia
//TOKEN, ADMIN
router.delete('/:id', [verificarToken, verificarRolAdmin], (req, res) => {
    let id = req.params.id
    let mensaje = 'noticia no encontrada'

    Noticia.findByIdAndDelete(id, (err, noticiaDB) => {
        if (err) { return res.status(500).json(err) }
        if (!noticiaDB) { return res.status(404).json({ message: mensaje }) }
        res.json({ message: 'noticia borrada' })
    })
})

module.exports = router